name: Build

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm
    name: Build with DevkitARM
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup environment
        run: git config --global safe.directory '*'
      - name: Install tools
        run: |
          sudo apt-get update
      - name: Build
        id: build
        run: |
          make
      - name: Zip it up
        run: |
          mkdir release
          mv *.3dsx release
          mv *.smdh release
          mv *.elf release
      - name: Send the Release
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: release/*
  release:
    name: "Upload releases"
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Remove old release, fetch artifacts, repackage binaries and upload new release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_TAG: ${{ github.ref_name == 'master' && 'continuous' || format('continuous-{0}', github.ref_name) }}
      run: |
        gh release delete "$RELEASE_TAG" \
          --yes \
          --cleanup-tag \
          --repo "$GITHUB_REPOSITORY" || true
        gh run download "$GITHUB_RUN_ID" \
          --dir artifacts/ \
          --repo "$GITHUB_REPOSITORY"
        gh release create "$RELEASE_TAG" artifacts/* \
          --title "Donut ${{ github.ref_name }} Build" \
          --target $GITHUB_SHA \
          --repo "$GITHUB_REPOSITORY" \
